using System.Diagnostics.CodeAnalysis;
using IotaSharp.Core;
using IotaSharp.Model;
using IotaSharp.Pow;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace IotaSharp.Tests.Pow
{
    [TestClass]
    [SuppressMessage("ReSharper", "InconsistentNaming")]
    [SuppressMessage("ReSharper", "StringLiteralTypo")]
    public class LocalPoWTest
    {
        private static IotaClient _iotaClient;

        private static PearlDiverLocalPoW _localPoW;

        private static IotaAPI _iotaApi;

        private const string TEST_SEED1 =
            "IHDEENZYITYVYSPKAURUZAQKGVJEREFDJMYTANNXXGPZ9GJWTEOJJ9IPMXOGZNQLSNMFDSQOTZAEETUEA";

        private const string TEST_ADDRESS_WITH_CHECKSUM_SECURITY_LEVEL_2 =
            "LXQHWNY9CQOHPNMKFJFIJHGEPAENAOVFRDIBF99PPHDTWJDCGHLYETXT9NPUVSNKT9XDTDYNJKJCPQMZCCOZVXMTXC";

        private const string TEST_MESSAGE = "JUSTANOTHERJOTATEST";
        private const string TEST_TAG = "JOTASPAM9999999999999999999";
        private const int MIN_WEIGHT_MAGNITUDE = 14;
        private const int DEPTH = 4;

        private static readonly string[] TEST_TRYTES_VALUE_TRANSFER =
        {
            "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999NNIWDJKXYXOYEHXQQBOPWSYYKUVNBLBJFRBCPZBTNOG9NJHLSOCANRRGACYCIOYQJATHYUIPOFXLV9URBUIA999999999999999999999999IOTA9ACCOUNTS9TRANSFER999999TQWPAD99C99999999C99999999RTAVSEEHIJEYJYHYPFHTLVQLGGHBBTBWJEWBUCKXWHNBEA9YIIKQOCDIKBLJOPUOKLBCGFDJX9CCQPRIWEQVFKIGQPKTDADIAHNVCCV9OCIAOSTQVDQVFY9YJRITGJJMRGVJPPWIEIPJRZTMTBNWPLMRFPUAHPY999EQVFKIGQPKTDADIAHNVCCV9OCIAOSTQVDQVFY9YJRITGJJMRGVJPPWIEIPJRZTMTBNWPLMRFPUAHPY999IOTA9ACCOUNTS9TRANSFER99999FMBUPTZNF999999999MMMMMMMMMCFQLIPUFO9APITWHAQECZUQ9ONB",
            "YWGMDTHWBQBUYCLHRKSDLKEUYOLLGRUWOUDGHZBYLR9E9OOVOEEPGUAAVVWONYESBLZIYSQE9Y9BKY9IDHLOKRGKMWLULBV9YIEUXQDXOMYCBBZWPUXPRFORAXZDPYNRDVU9THLKNZKMBISYYCVRSCYBUOWLCXYTEX9AWFVLPTHMKXGLZGLWMSDJBKJYBFV9AYWYFADKOVVLYVV9UYRDGNCLFHUAGDOZHMRGABFDWJFGYLRCVJCARLADDRVJFTRUXI9ZIMYJRGV9WEHFPABRZSI9GPBHBEKVFXZOXZCLGXFHA9QHRAVLUZDZQBIAVKPNJTCCBZY9ERFTYGEQSNQVAYSQDMGTHLMZEGWOGXYTUCNUWCJOMVX9ZEJE9SO9BNUGBHLOJZPQBPPPARJUFIMF9NNOKURSTEWRFFKDZOH9PZEYJXYXWXZJVRAGCJSNNDGVXG9QJVEPC9BCDRWTNTZYVWMKTJHMYVQJNULSPWANGCUGBFDWZNNXWYNFLNZWLCHSDAUDYVRH9AAIIZZJPEYEPPFYZQGLUTAADGZDHPWZCHREYRHKVIBDNDBQBT9NEBAT9SRPGBKGQBVKNGFYHKNXGDFYPPT9LUYGREAPGCDZZCDCZQUU9KASZSUFLHYQIQRBLQ9PB9KCZVEXHB9MOAWILVHRJEQONOKRVGQPUDEAJPBWBZDRBHKVWODTVZZYGQMEZQFBIDLCDZIJT9HHENWWPTCTWIIKHVMLSHXAFMGKBBLPZXACENGMFLIRSAFLTSHIFSMSUNJSIGICDHGOWMT9PGDWAPDPTBOXEXQKGYFCPXKXIAJAZTXLR9VBLVMTFLVTBQYLQRUAJNLZZZIGDMQFGW9QSTIZCJCZUFIEXXMPINNJCEMGFWETKBBGBWXRXPCKJOCQMUPFAJWHVXETDGHCUONFFLCXNZZGRVJGUUDSZCRFBAGUOGREXQVWIXYQFRWCWUXENLKUIEGYMXYFPXXHGASEOGDNLJMENIWLQNXLGROXHNMVQKCTQSPPRLICRJ9NQR9RXINSBKLYYNIHENVFXGHAE9NFCJOXZZHLNIMZKMKIXQMSYXRYNME9IJRQOVSEWQRASU9TZBHNRXKTLE9GNUWSPCHXNRSPTLDYYKYDORH9FDRYRVLUWQEVUKHPKUEKZOOHBOS9APGMMMXFPPNOIMTSLPKBMOMT9SDRLBCUXNBQMTHFGYPWGRPXEWFILFWRSBKEBNXHFYPW9ZSHURXAEBAIKYNHXBZT9ZQCBCKWONKZEQSKIAOCXDUJAGGKINLYCNUVWBDJTCRSUOQBUSHDWFXBPYJQWSANITQOUWXIHTRXJZ9RASQXZQEQXQWQUOOMMCMWRAIKUVCUEQLPPUNBAUN9K9RUUXUTDURPDKCBQJHNRKBGUAPMUFSCUUZNBVOKOMQV9XNGHAMP9JN9MKSFZRUCCKPMLY9IME9BAZPFRHTUWLYE99YWTCALYZXQ9RSJGSSTHCSNQQLHENBJRCOVCRPANFVLOKOY9LOMPMXKR9PQS9UYXEALDZUHZ9RQSTXSXT9IKVLHYV9PDNXZMN9CNWCBYEUWTSPNNRMFULNPY9SDBLJBSRZGWCT9ZFEANEWGDADSMEBRSBZLPEGDLSHYEKBALWYGWQNJZOSXGNK9BPNBRUB9DQDJNCGWKAIZJOF9PTEGSULBFC9WELZAAGXUBFEPRWELFIM9SAZMBZQBBZXSVXXRU9VYEXI9QLCWEDMJYIOCJTCGFIYOUIOLSKPVFXUZQDKRBVQQPRGPV9JWYFMOMRXIVEVUTWI9ZKVPRWTWSLAFKTQQCWVOUYEHEXTPQZPKHXRGNFCXDOZHDDQOVWLYFNKERVGNZNOETBUGIDXCIHUBLUWDOJVKJXXQPDNPLLXHYDZMACKBRVOORHRJYYAHKFSCXXPRHLRUKCXXRYI9HSZSEPCQDWGYP9BYZXWPOAUXLNCERGYUACGALDJLCGHQZKLUBXRHBDBUFZLSXACIAWGBPNINLQET9AFMXKTLRZAQRWXRYZRWAKZHHBZJCOXLSYDVORZQPWUSJUHI9VP9BSNLYXKQQLUKPHKHOYARSIREBW9IGNBEXZXSXRHHPIRTAAULXDJX9UPTO9DXUUDNUBHCWSQYEZBYMQHCARUVIAOKAWIFDYYYL9EQZZWJGJWJPKOTWFMUGZDEMGFVOHHKVAGQPOWIL9DIQEIPVJL9DEUVKEMKRJDYDVACBRXNYSIHEV9HWQECNHHZBKWDVM9MY9IGBSEQSMSRMZNRZXHAGBKMRFCA999999999999999999999999999IOTA9ACCOUNTS9TRANSFER999999TQWPAD99B99999999C99999999RTAVSEEHIJEYJYHYPFHTLVQLGGHBBTBWJEWBUCKXWHNBEA9YIIKQOCDIKBLJOPUOKLBCGFDJX9CCQPRIWDAG9LCCSHVDLUDX9UTZIUAOA9BNAYOFAVKUKKWDJDZODLUK9NDMGCZBA9REFPMQSOMDFVWVMEIHU99999EQVFKIGQPKTDADIAHNVCCV9OCIAOSTQVDQVFY9YJRITGJJMRGVJPPWIEIPJRZTMTBNWPLMRFPUAHPY999IOTA9ACCOUNTS9TRANSFER99999NKCXPTZNF999999999MMMMMMMMMNMKXOMG9LYENZYYOXP9CAQKKPQG",
            "RASZHIFYMGATRQXGMSJQWQHR9RGQMYJZGRRUMIP9PEJHWLJIFO9OLVVMVKZXSHUKXMQFROOKOEJJBKBWCCYIGCTSEESZFSFGRE9SFSDQJK9CBYWUCRIJTNGD9GBXYRZOIZADTRJEV9CTKFVLCKXEXYNILDBMWPCWMAOBLQAPITBCIKIVKJGAVPPTWJSWGDDIZZVKJVVWIHYDTZDPQN9KWLJIOUP9LNODIFQLINSYCPCGSS9KWXDYM9POIQSJOFRUDVPYDSKZVJIS9ZUGSRW9WMV9YVACFQAZ9XZTPDADMFETEAOTGVUJLEAGQZBQVASQZQOCUCKOZPSIISXYXUIIPNPXEOWPBSTENOEYZYHOQJQHCTWMWJIFFDZMSTIEYMBULUSBITXQFURTPTYQXOD9WNTNJRQIZGLZXGEFATGADUQF9XMPCY9QBX9RKDFJON9OMJVYDAWKWUHNMCSCDSYZVFDUAERISVTZVLQBO9JTZWOQHZYNNBBBIMCWKMSDSPDXDJDQCCHOX9MYTTJVWMJSWMJLSWOZGZSTAQXAKKFYMGXJPNECEMVEWRWOCY9LMSLRFOIHSIGFB9CZNOUMYOSABKBO9TVZUXGSLOWJM9GYI9ONSKFFOEMGDVYJXPHUDRJHYZYMKPOARWDEHCWJBWZY9LDKWYLYSTHGBFRNLTZVRMILKVD9GQE9FIBAGD9ECTHGCSRJ9PJWNWQQDBPGWRARRXQM9GWQPMERSBRUYHA9ZFNTQZOCYTYNEBO9YWNVQMIQDSLFCIJA9DMDBPLWZEKTIYFRXHXS9LMRAHKKOIJPFCNLFX9GCY9SWUFFAARADXHWIFLLKFAFUZLCMGVHAKPHWGEO9WMNNTUQRITWPBLJUCGTICCYUZJDNW9UUEWHKFBKCDNVVSBJCLNKZVSJXKYUQCDTHASLWRIHBUD9NCHOVYBTFJBHGBLIQRJQL9XQBNMXPEBIWUHDMPAXERPVRDKMCXXWHPPNKELOPBBVRNIPTSNIXJGPYDM9X9BSNNYIPVDAEONMLIUQRVWZPGS9NKOQPHEIGNFD9ZIWBSEQJIRBPSMQRTAXSJDBFQYHVKYKNLCRBJOR9LVBQOKXCHIQF9VQIOCDJEJUB9QQASHOIATPSLKTDATJZHKTQMYDLKTPDXOOXNRXXWUSJGOSSSEFDGRTNCDOSWFVFDULFCMAMYBKOEWKSLQTASADLVGHPUWFJRDONSVUAWPKCXMGYQP9BBTABENPCOC9EMAOBRSJVWLKMRHBJSZBANINRUTZINISDX9AIHIETRIDRN9XXVQWYKCQZ9ZOGVHGHURNPPAKPGMSGJKETOV99WKXIIYMJOZOVVVDBXFCUGTSXXEIGCNEVHFWBJQSQUIOXXDOAMDXEKZNWHAVZJYTMZHSSUSMLCECSYSRVWSCYHKORQHMRDZBBUNQKRYPEBMGPGBGBUUVTLZONUOZ9PWEAZNVTVLELGUVPX9FOFDKFZOCBE9RUHJSQGLSWZMWLQDHWBMRRDDJPIZBOEDPJONMC9UHWIOZYBJXZQJHTZCOORPWDFRWTOQAQDAFLCSUABRGAWFRJWKSSJJDWJIF9GNPQFVJOD9ZELCUXUUFBWXGFFIZ9RYRTNBCWQAASJAUMQIYKNPQPWCYYMKOZZLFHCUCVMJSA9QRMYFGXKHVJYLWNZDSQUNOUHTXWT9ETGSZ9ZTNPRBDURNTCBSATXOGGIJKCPCISBPZHFPNWBZEBOUVIDIXOKCZPTRFYPBSUJGWGJBINNWNPRSIIRSQISDR9HTHYOHVJBXFBTQLZXMPHE9KRXRMF9HSEMZCLIP9EIVWLLEFGJUNWGKQJMEDYXYZQD9NO9ICFQTDJUPCTP9BIPLYEJYHNYBLBWRFRX9GOGPQCYFEUKVNTYOH9QWDNPMQMVZRM9ULLBXMKSHNOLYRIFYLKCKPTMPIUUJWUVFGUKNZGZDWOFIZJH9OT9KSLJSZKWVYYYYHW9EPFRXOTEWNPAMOKFBLYDYXOV9R9RUEMDELTRXFTVNVZNBRJAPQWSOB9NXERDJYA99VLUKVS9VTQCRB9XYCYMWRSJQCGRW9WUKSUNKWZLNMCZNFTAAHML999WMZESFYED9AKDHRONUCKXUFWGDSBATTJCEEOKPCWIVVQQTTDALUXCLNXGSMGBBZZFJONZQIGLA9PYREAFNGGPFWHKGNWWDIQEIPVJL9DEUVKEMKRJDYDVACBRXNYSIHEV9HWQECNHHZBKWDVM9MY9IGBSEQSMSRMZNRZXHAGBKMRFCAERZ999999999999999999999999IOTA9ACCOUNTS9TRANSFER999999TQWPAD99A99999999C99999999RTAVSEEHIJEYJYHYPFHTLVQLGGHBBTBWJEWBUCKXWHNBEA9YIIKQOCDIKBLJOPUOKLBCGFDJX9CCQPRIWIJEXBNHMIBEWDCDFPGXRUDJGXDR9NXGEFHJJEOZPBZE9GSNYHDFBLTT9VMMFWFPFWYDBMBLNCSREZ9999EQVFKIGQPKTDADIAHNVCCV9OCIAOSTQVDQVFY9YJRITGJJMRGVJPPWIEIPJRZTMTBNWPLMRFPUAHPY999IOTA9ACCOUNTS9TRANSFER99999CTX9PTZNF999999999MMMMMMMMMIBYBANZPHARBAWTVQHJADRXLVZY",

        };

        [TestInitialize]
        public void CreateProxyInstance()
        {
            _iotaClient = new IotaClient("https://nodes.devnet.thetangle.org:443");
            _localPoW = new PearlDiverLocalPoW();

            _iotaApi = new IotaAPI()
            {
                IotaClient = _iotaClient,
                LocalPoW = _localPoW
            };
        }

        [TestMethod]
        public void ShouldSendTransfer()
        {
            Transfer[] transfers =
            {
                new Transfer(TEST_ADDRESS_WITH_CHECKSUM_SECURITY_LEVEL_2, 0, TEST_MESSAGE, TEST_TAG)
            };

            SendTransferResponse str =
                _iotaApi.SendTransfer(
                    TEST_SEED1, 2, DEPTH, MIN_WEIGHT_MAGNITUDE, transfers,
                    null, null, false, false, null);

            Assert.IsNotNull(str.Results);
        }

        [TestMethod]
        public void ShouldHaveEqualOrderTrytes()
        {
            var localResponse = _localPoW.AttachToTangle(
                TEST_SEED1, TEST_SEED1,
                11, TEST_TRYTES_VALUE_TRANSFER);

            var remoteResponse = _iotaClient.AttachToTangle(
                TEST_SEED1, TEST_SEED1,
                11, TEST_TRYTES_VALUE_TRANSFER);

            for (int i = 0; i < TEST_TRYTES_VALUE_TRANSFER.Length; i++)
            {
                Assert.AreEqual(new Transaction(localResponse.Trytes[i]).Value,
                    new Transaction(remoteResponse.Trytes[i]).Value);
            }
        }

    }
}
